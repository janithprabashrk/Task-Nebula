name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  server:
    name: Server (build, lint, test)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: FS-Intern_Janith_Prabhash/server
    services:
      postgres:
        image: postgres:16-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
          POSTGRES_DB: app
        options: >-
          --health-cmd "pg_isready -U app -d app" 
          --health-interval 5s 
          --health-timeout 3s 
          --health-retries 20
    env:
      DATABASE_URL: postgresql://app:app@localhost:5432/app?schema=public
      JWT_SECRET: testsecret
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            FS-Intern_Janith_Prabhash/server/package-lock.json
      - name: Install dependencies
        run: npm install
      - name: Generate Prisma Client
        run: npx prisma generate
      - name: Apply DB migrations
        run: npx prisma migrate deploy
      - name: Seed database
        run: npm run db:seed
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test
        run: npm test

  web:
    name: Web (build)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: FS-Intern_Janith_Prabhash/web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            FS-Intern_Janith_Prabhash/web/package-lock.json
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
